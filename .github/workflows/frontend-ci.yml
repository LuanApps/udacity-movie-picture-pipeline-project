name: Frontend CI

on:
  pull_request:
    branches:
      - main
    paths:
      - 'starter/frontend/**'
  workflow_dispatch:  # This allows manual runs

jobs:

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: starter/frontend/node_modules
          key: npm-${{ runner.os }}-frontend-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: npm-${{ runner.os }}-frontend-

      - name: Install Dependencies
        run: npm ci
        working-directory: starter/frontend

      - name: Run Lint
        run: npm run lint
        working-directory: starter/frontend

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: starter/frontend/node_modules
          key: npm-${{ runner.os }}-frontend-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: npm-${{ runner.os }}-frontend-

      - name: Install Dependencies
        run: npm ci
        working-directory: starter/frontend

      - name: Run Tests
        run: npm test
        working-directory: starter/frontend

  
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './starter/frontend/package-lock.json'

    - run: npm ci
      working-directory: './starter/frontend'
    - run: npm run build --if-present
      working-directory: './starter/frontend'
    - run: npm test
      working-directory: './starter/frontend'
