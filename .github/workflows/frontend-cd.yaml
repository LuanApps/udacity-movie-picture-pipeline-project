name: Frontend Continuous Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
  workflow_dispatch:  # This allows manual runs

jobs:

  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

  lint:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Dependencies and Run Linting
        run: |
          cd frontend
          npm ci
          npm run lint

  test:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Dependencies and Run Tests
        run: |
          cd frontend
          npm ci
          npm test

  build:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          cd frontend
          docker build -t frontend:latest .
          docker tag frontend-app:latest frontend:${{ github.sha }}

  ecr-login:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry: 010999175995.dkr.ecr.us-east-1.amazonaws.com/frontend
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1

  ecr-push:
    runs-on: ubuntu-latest
    needs: ecr-login

    steps:
      - name: Push Docker Image to ECR
        run: |
          docker tag frontend-app:${{ github.sha }} 010999175995.dkr.ecr.us-east-1.amazonaws.com/frontend:${{ github.sha }}
          docker push 010999175995.dkr.ecr.us-east-1.amazonaws.com/frontend:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - ecr-push

    steps:
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f kubernetes-manifests/frontend-deployment.yaml
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig.yaml